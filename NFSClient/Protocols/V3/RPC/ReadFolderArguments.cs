/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
using NFSLibrary.Protocols.Commons;
using NFSLibrary.RPC.XDR;

namespace NFSLibrary.Protocols.V3.RPC
{
    public class ReadFolderArguments : IXdrData
    {
        private NFSHandle _item;
        private NFSCookie _cookie;
        private byte[] _cookieverf;
        private int _count;

        public ReadFolderArguments()
        { }

        public ReadFolderArguments(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        {
            _item.XdrEncode(xdr);
            _cookie.XdrEncode(xdr);
            xdr.XdrEncodeOpaque(_cookieverf, NFSv3Protocol.NFS3_COOKIEVERFSIZE);
            xdr.XdrEncodeInt(_count);
        }

        public void XdrDecode(XdrDecodingStream xdr)
        {
            _item = new NFSHandle();
            _item.Version = V3.RPC.NFSv3Protocol.NFS_V3;
            _item.XdrDecode(xdr);
            _cookie = new NFSCookie(xdr);
            _cookieverf = xdr.XdrDecodeOpaque(NFSv3Protocol.NFS3_COOKIEVERFSIZE);
            _count = xdr.XdrDecodeInt();
        }

        public NFSHandle HandleObject
        {
            get
            { return _item; }
            set
            { _item = value; }
        }

        public NFSCookie Cookie
        {
            get
            { return _cookie; }
            set
            { _cookie = value; }
        }

        public byte[] CookieData
        {
            get
            { return _cookieverf; }
            set
            { _cookieverf = value; }
        }

        public int Count
        {
            get
            { return _count; }
            set
            { _count = value; }
        }
    }
    // End of READDIR3args.cs
}