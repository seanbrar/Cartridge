/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
using NFSLibrary.Protocols.Commons;
using NFSClient.RPC.XDR;

namespace NFSClient.Protocols.V3.RPC
{
    public class MakeFileArguments : IXdrData
    {
        private ItemOperationArguments _where;
        private MakeFileHow _how;

        public MakeFileArguments()
        { }

        public MakeFileArguments(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        {
            _where.XdrEncode(xdr);
            _how.XdrEncode(xdr);
        }

        public void XdrDecode(XdrDecodingStream xdr)
        {
            _where = new ItemOperationArguments(xdr);
            _how = new MakeFileHow(xdr);
        }

        public ItemOperationArguments Where
        {
            get { return _where; }
            set { _where = value; }
        }

        public MakeFileHow How
        {
            get { return _how; }
            set { _how = value; }
        }
    }

    public class MakeFileHow : IXdrData
    {
        private MakeFileModes _mode;
        private MakeAttributes _obj_attributes;
        private byte[] _verf;

        public enum MakeFileModes
        {
            UNCHECKED = 0,
            GUARDED = 1,
            EXCLUSIVE = 2
        }

        public MakeFileHow()
        { }

        public MakeFileHow(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        {
            xdr.xdrEncodeInt((int)_mode);

            switch (_mode)
            {
                case MakeFileModes.UNCHECKED:
                case MakeFileModes.GUARDED:
                    _obj_attributes.XdrEncode(xdr);
                    break;
                case MakeFileModes.EXCLUSIVE:
                    xdr.xdrEncodeOpaque(_verf, NFSv3Protocol.NFS3_CREATEVERFSIZE);
                    break;
            }
        }

        public void XdrDecode(XdrDecodingStream xdr)
        {
            _mode = (MakeFileModes)xdr.xdrDecodeInt();

            switch (_mode)
            {
                case MakeFileModes.UNCHECKED:
                case MakeFileModes.GUARDED:
                    _obj_attributes = new MakeAttributes(xdr);
                    break;
                case MakeFileModes.EXCLUSIVE:
                    _verf = xdr.xdrDecodeOpaque(NFSv3Protocol.NFS3_CREATEVERFSIZE);
                    break;
            }
        }

        public MakeFileModes Mode
        {
            get { return _mode; }
            set { _mode = value; }
        }

        public MakeAttributes Attributes
        {
            get { return _obj_attributes; }
            set { _obj_attributes = value; }
        }

        public byte[] Verification
        {
            get { return _verf; }
            set { _verf = value; }
        }
    }
    // End of CREATE3args.cs
}