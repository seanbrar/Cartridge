/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
using NFSLibrary.Protocols.Commons;
using NFSLibrary.RPC.XDR;

namespace NFSLibrary.Protocols.V3.RPC
{
    public class SymlinkAccessOK : IXdrData
    {
        private NFSHandle _obj;
        private PostOperationAttributes _obj_attributes;
        private WritingData _dir_wcc;

        public SymlinkAccessOK()
        { }

        public SymlinkAccessOK(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        {
            this._obj.XdrEncode(xdr);
            this._obj_attributes.XdrEncode(xdr);
            this._dir_wcc.XdrEncode(xdr);
        }

        public void XdrDecode(XdrDecodingStream xdr)
        {
            this._obj = new NFSHandle();
            this._obj.Version = V3.RPC.NFSv3Protocol.NFS_V3;
            this._obj.XdrDecode(xdr);
            this._obj_attributes = new PostOperationAttributes(xdr);
            this._dir_wcc = new WritingData(xdr);
        }

        public NFSHandle Handle
        {
            get
            { return this._obj; }
        }

        public PostOperationAttributes Attributes
        {
            get
            { return this._obj_attributes; }
        }

        public WritingData Data
        {
            get
            { return this._dir_wcc; }
        }
    }

    public class SymlinkAccessFAIL : IXdrData
    {
        private WritingData _dir_wcc;

        public SymlinkAccessFAIL()
        { }

        public SymlinkAccessFAIL(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        { this._dir_wcc.XdrEncode(xdr); }

        public void XdrDecode(XdrDecodingStream xdr)
        { this._dir_wcc = new WritingData(xdr); }

        public WritingData Data
        {
            get
            { return this._dir_wcc; }
        }
    }
    // End of SYMLINK3res.cs
}