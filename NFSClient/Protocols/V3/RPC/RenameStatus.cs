/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
using NFSLibrary.Protocols.Commons;
using NFSLibrary.RPC.XDR;

namespace NFSLibrary.Protocols.V3.RPC
{
    public class RenameAccessOK : IXdrData
    {
        private WritingData _fromdir_wcc;
        private WritingData _todir_wcc;

        public RenameAccessOK()
        { }

        public RenameAccessOK(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        {
            _fromdir_wcc.XdrEncode(xdr);
            _todir_wcc.XdrEncode(xdr);
        }

        public void XdrDecode(XdrDecodingStream xdr)
        {
            _fromdir_wcc = new WritingData(xdr);
            _todir_wcc = new WritingData(xdr);
        }

        public WritingData From
        {
            get { return _fromdir_wcc; }
        }

        public WritingData To
        {
            get { return _todir_wcc; }
        }
    }

    public class RenameAccessFAIL : IXdrData
    {
        private WritingData _fromdir_wcc;
        private WritingData _todir_wcc;

        public RenameAccessFAIL()
        { }

        public RenameAccessFAIL(XdrDecodingStream xdr)
        { XdrDecode(xdr); }

        public void XdrEncode(XdrEncodingStream xdr)
        {
            _fromdir_wcc.XdrEncode(xdr);
            _todir_wcc.XdrEncode(xdr);
        }

        public void XdrDecode(XdrDecodingStream xdr)
        {
            _fromdir_wcc = new WritingData(xdr);
            _todir_wcc = new WritingData(xdr);
        }

        public WritingData From
        {
            get { return _fromdir_wcc; }
        }

        public WritingData To
        {
            get { return _todir_wcc; }
        }
    }
    // End of WRITE3res.cs
}